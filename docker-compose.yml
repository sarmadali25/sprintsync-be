services:
  # PostgreSQL Database (for local development only)
  postgres:
    image: postgres:15-alpine
    container_name: sprintsync-postgres
    environment:
      POSTGRES_DB: sprintsync
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sprintsync-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js Application
  app:
    build: .
    container_name: sprintsync-app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      # Railway database variables (with fallbacks for local development)
      DATABASE_URL: ${DATABASE_URL}
      PGHOST: ${PGHOST:-postgres}
      PGPORT: ${PGPORT:-5432}
      PGDATABASE: ${PGDATABASE:-sprintsync}
      PGUSER: ${PGUSER:-postgres}
      PGPASSWORD: ${PGPASSWORD:-postgres}
      # Fallback to original variables for local development
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-sprintsync}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      # JWT Secret
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      # Port configuration
      PORT: ${PORT:-3000}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sprintsync-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  sprintsync-network:
    driver: bridge 