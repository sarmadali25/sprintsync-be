services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sprintsync-postgres
    environment:
      POSTGRES_DB: sprintsync
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sprintsync-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js Application
  app:
    build: .
    container_name: sprintsync-app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: sprintsync
      DB_USER: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sprintsync-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  sprintsync-network:
    driver: bridge 